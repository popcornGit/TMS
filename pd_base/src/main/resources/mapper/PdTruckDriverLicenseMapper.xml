<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.runone.pinda.mbg.mapper.PdTruckDriverLicenseMapper">
  <resultMap id="BaseResultMap" type="com.runone.pinda.mbg.model.PdTruckDriverLicense">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="allowable_type" jdbcType="VARCHAR" property="allowableType" />
    <result column="initial_certificate_date" jdbcType="DATE" property="initialCertificateDate" />
    <result column="valid_period" jdbcType="VARCHAR" property="validPeriod" />
    <result column="license_number" jdbcType="VARCHAR" property="licenseNumber" />
    <result column="driver_age" jdbcType="INTEGER" property="driverAge" />
    <result column="license_type" jdbcType="VARCHAR" property="licenseType" />
    <result column="qualification_certificate" jdbcType="VARCHAR" property="qualificationCertificate" />
    <result column="pass_certificate" jdbcType="VARCHAR" property="passCertificate" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, allowable_type, initial_certificate_date, valid_period, license_number, 
    driver_age, license_type, qualification_certificate, pass_certificate, picture
  </sql>
  <select id="selectByExample" parameterType="com.runone.pinda.mbg.model.PdTruckDriverLicenseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pd_truck_driver_license
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pd_truck_driver_license
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pd_truck_driver_license
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.runone.pinda.mbg.model.PdTruckDriverLicenseExample">
    delete from pd_truck_driver_license
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.runone.pinda.mbg.model.PdTruckDriverLicense">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pd_truck_driver_license (user_id, allowable_type, initial_certificate_date, 
      valid_period, license_number, driver_age, 
      license_type, qualification_certificate, 
      pass_certificate, picture)
    values (#{userId,jdbcType=VARCHAR}, #{allowableType,jdbcType=VARCHAR}, #{initialCertificateDate,jdbcType=DATE}, 
      #{validPeriod,jdbcType=VARCHAR}, #{licenseNumber,jdbcType=VARCHAR}, #{driverAge,jdbcType=INTEGER}, 
      #{licenseType,jdbcType=VARCHAR}, #{qualificationCertificate,jdbcType=VARCHAR}, 
      #{passCertificate,jdbcType=VARCHAR}, #{picture,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.runone.pinda.mbg.model.PdTruckDriverLicense">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.String">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pd_truck_driver_license
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="allowableType != null">
        allowable_type,
      </if>
      <if test="initialCertificateDate != null">
        initial_certificate_date,
      </if>
      <if test="validPeriod != null">
        valid_period,
      </if>
      <if test="licenseNumber != null">
        license_number,
      </if>
      <if test="driverAge != null">
        driver_age,
      </if>
      <if test="licenseType != null">
        license_type,
      </if>
      <if test="qualificationCertificate != null">
        qualification_certificate,
      </if>
      <if test="passCertificate != null">
        pass_certificate,
      </if>
      <if test="picture != null">
        picture,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="allowableType != null">
        #{allowableType,jdbcType=VARCHAR},
      </if>
      <if test="initialCertificateDate != null">
        #{initialCertificateDate,jdbcType=DATE},
      </if>
      <if test="validPeriod != null">
        #{validPeriod,jdbcType=VARCHAR},
      </if>
      <if test="licenseNumber != null">
        #{licenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="driverAge != null">
        #{driverAge,jdbcType=INTEGER},
      </if>
      <if test="licenseType != null">
        #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="qualificationCertificate != null">
        #{qualificationCertificate,jdbcType=VARCHAR},
      </if>
      <if test="passCertificate != null">
        #{passCertificate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.runone.pinda.mbg.model.PdTruckDriverLicenseExample" resultType="java.lang.Long">
    select count(*) from pd_truck_driver_license
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pd_truck_driver_license
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.allowableType != null">
        allowable_type = #{record.allowableType,jdbcType=VARCHAR},
      </if>
      <if test="record.initialCertificateDate != null">
        initial_certificate_date = #{record.initialCertificateDate,jdbcType=DATE},
      </if>
      <if test="record.validPeriod != null">
        valid_period = #{record.validPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.licenseNumber != null">
        license_number = #{record.licenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.driverAge != null">
        driver_age = #{record.driverAge,jdbcType=INTEGER},
      </if>
      <if test="record.licenseType != null">
        license_type = #{record.licenseType,jdbcType=VARCHAR},
      </if>
      <if test="record.qualificationCertificate != null">
        qualification_certificate = #{record.qualificationCertificate,jdbcType=VARCHAR},
      </if>
      <if test="record.passCertificate != null">
        pass_certificate = #{record.passCertificate,jdbcType=VARCHAR},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pd_truck_driver_license
    set id = #{record.id,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      allowable_type = #{record.allowableType,jdbcType=VARCHAR},
      initial_certificate_date = #{record.initialCertificateDate,jdbcType=DATE},
      valid_period = #{record.validPeriod,jdbcType=VARCHAR},
      license_number = #{record.licenseNumber,jdbcType=VARCHAR},
      driver_age = #{record.driverAge,jdbcType=INTEGER},
      license_type = #{record.licenseType,jdbcType=VARCHAR},
      qualification_certificate = #{record.qualificationCertificate,jdbcType=VARCHAR},
      pass_certificate = #{record.passCertificate,jdbcType=VARCHAR},
      picture = #{record.picture,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.runone.pinda.mbg.model.PdTruckDriverLicense">
    update pd_truck_driver_license
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="allowableType != null">
        allowable_type = #{allowableType,jdbcType=VARCHAR},
      </if>
      <if test="initialCertificateDate != null">
        initial_certificate_date = #{initialCertificateDate,jdbcType=DATE},
      </if>
      <if test="validPeriod != null">
        valid_period = #{validPeriod,jdbcType=VARCHAR},
      </if>
      <if test="licenseNumber != null">
        license_number = #{licenseNumber,jdbcType=VARCHAR},
      </if>
      <if test="driverAge != null">
        driver_age = #{driverAge,jdbcType=INTEGER},
      </if>
      <if test="licenseType != null">
        license_type = #{licenseType,jdbcType=VARCHAR},
      </if>
      <if test="qualificationCertificate != null">
        qualification_certificate = #{qualificationCertificate,jdbcType=VARCHAR},
      </if>
      <if test="passCertificate != null">
        pass_certificate = #{passCertificate,jdbcType=VARCHAR},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.runone.pinda.mbg.model.PdTruckDriverLicense">
    update pd_truck_driver_license
    set user_id = #{userId,jdbcType=VARCHAR},
      allowable_type = #{allowableType,jdbcType=VARCHAR},
      initial_certificate_date = #{initialCertificateDate,jdbcType=DATE},
      valid_period = #{validPeriod,jdbcType=VARCHAR},
      license_number = #{licenseNumber,jdbcType=VARCHAR},
      driver_age = #{driverAge,jdbcType=INTEGER},
      license_type = #{licenseType,jdbcType=VARCHAR},
      qualification_certificate = #{qualificationCertificate,jdbcType=VARCHAR},
      pass_certificate = #{passCertificate,jdbcType=VARCHAR},
      picture = #{picture,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>